name: Build

on:
  workflow_call:
    inputs:
      ref:
        type: string
        required: true
      artifacts-retention-days:
        description: Number of days to retain build artifacts
        type: number
        default: 90
      build-cli:
        type: boolean
        default: false
      build-lambdas:
        type: boolean
        default: false
    outputs:
      build-cli-result:
        value: ${{ jobs.build-cli.result }}
      build-lambdas-result:
        value: ${{ jobs.build-lambdas.result }}
      cli-artifacts-key:
        value: ${{ jobs.build-cli.outputs.artifacts-key }}
      cli-artifacts-path:
        value: ${{ jobs.build-cli.outputs.artifacts-path }}
      cli-checksums-sha256:
        value: ${{ jobs.build-cli.outputs.checksums-sha256 }}
      lambda-artifacts-key:
        value: ${{ jobs.build-lambdas.outputs.artifacts-key }}
      lambda-artifacts-path:
        value: ${{ jobs.build-lambdas.outputs.artifacts-path }}
      lambda-checksums-sha256:
        value: ${{ jobs.build-lambdas.outputs.checksums-sha256 }}

jobs:
  prepare:
    runs-on: ubuntu-latest
    env:
      SOURCES_KEY: go-sources-${{ inputs.ref }}
      SOURCES_PATH: |
        ${{ github.workspace }}/cli
        ${{ github.workspace }}/cmd
        ${{ github.workspace }}/internal
        ${{ github.workspace }}/pkg
        ${{ github.workspace }}/openapi/openapi.yaml
        ${{ github.workspace }}/go.mod
        ${{ github.workspace }}/go.sum
        ${{ github.workspace }}/Taskfile.yml
    outputs:
      sources-key: ${{ env.SOURCES_KEY }}
      sources-path: ${{ env.SOURCES_PATH }}
    steps:
      - uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            actions-results-receiver-production.githubapp.com:443
            api.github.com:443
            github.com:443
            objects.githubusercontent.com:443
            proxy.golang.org:443
            sum.golang.org:443
            storage.googleapis.com:443
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          show-progress: 'false'
          persist-credentials: 'false'
          ref: ${{ inputs.ref }}
      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          go-version-file: go.mod
      - uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: 3.x
      - name: Pre-build optimization
        run: task prebuild-lambda
      - name: Store build sources
        id: store
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: ${{ env.SOURCES_KEY }}
          path: ${{ env.SOURCES_PATH }}
          if-no-files-found: error
          include-hidden-files: true
          retention-days: ${{ inputs.artifacts-retention-days }}

  build-lambdas:
    name: Build Lambdas
    if: needs.prepare.result == 'success' && inputs.build-lambdas
    runs-on: ubuntu-latest
    needs:
      - prepare
    env:
      ARTIFACTS_KEY: lambdas-${{ inputs.ref }}
      ARTIFACTS_PATH: ${{ github.workspace }}/bin
    outputs:
      artifacts-key: ${{ env.ARTIFACTS_KEY }}
      artifacts-path: ${{ env.ARTIFACTS_PATH }}
      checksums-sha256: ${{ steps.final-checksums.outputs.sha256 }}
    steps:
      - uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            actions-results-receiver-production.githubapp.com:443
            api.github.com:443
            github.com:443
            objects.githubusercontent.com:443
            proxy.golang.org:443
            sum.golang.org:443
            raw.githubusercontent.com:443
            storage.googleapis.com:443
      - name: Restore Go build sources
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: ${{ needs.prepare.outputs.sources-key }}
          path: .
      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          go-version-file: go.mod
      - uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: 3.x
      - name: Prepare artifacts output directory
        run: |
          mkdir -p "$ARTIFACTS_PATH"
          rm -rf "$ARTIFACTS_PATH/*"
      - name: Build Lambdas
        id: build
        run: task build
      - name: Get compiled checksums
        id: compiled-checksums
        run: |
          COMPILED_CHECKSUMS=$(find "$ARTIFACTS_PATH" -type f -exec sha256sum -b {} \;)
          echo "sha256<<EOF" >> $GITHUB_OUTPUT
          echo "$COMPILED_CHECKSUMS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Install UPX
        uses: crazy-max/ghaction-upx@0fc45e912669ba9e8fa2b430e97c8da2a632e29b # v3.0.0
        with:
          version: v4.1.0
          install-only: true
      - name: Run UPX
        id: pack
        run: |
          UPX_RESULT=$(upx -5 -q "$ARTIFACTS_PATH"/*/bootstrap)
          echo "result<<EOF" >> $GITHUB_OUTPUT
          echo "$UPX_RESULT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Get final checksums
        id: final-checksums
        run: |
          FINAL_CHECKSUMS=$(find "$ARTIFACTS_PATH" -type f -exec sha256sum -b {} \;)
          echo "sha256<<EOF" >> $GITHUB_OUTPUT
          echo "$FINAL_CHECKSUMS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Publish build results
        run: |
          REPORT_FILE=$(mktemp -t summary.md.XXXXX)
          cat >> $REPORT_FILE << 'ENDOFREPORT'
          ## Build Lambdas Summary

          <details>
          <summary>Compiled Checksums (before packing)</summary>

          ```
          ${{ env.COMPILED_CHECKSUMS }}
          ```

          </details>
          <details>
          <summary>Final Checksums</summary>

          ```
          ${{ env.FINAL_CHECKSUMS }}
          ```

          </details>
          <details>
          <summary>UPX Packing Results</summary>

          ```
          ${{ env.UPX_RESULT }}
          ```

          </details>
          ENDOFREPORT
          cat "$REPORT_FILE" >> $GITHUB_STEP_SUMMARY
        env:
          COMPILED_CHECKSUMS: ${{ steps.compiled-checksums.outputs.sha256 }}
          FINAL_CHECKSUMS: ${{ steps.final-checksums.outputs.sha256 }}
          UPX_RESULT: ${{ steps.pack.outputs.result }}
      - name: Store build artifacts
        id: store
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: ${{ env.ARTIFACTS_KEY }}
          path: ${{ env.ARTIFACTS_PATH }}
          if-no-files-found: error
          include-hidden-files: true
          retention-days: ${{ inputs.artifacts-retention-days }}

  build-cli:
    name: Build CLI
    if: needs.prepare.result == 'success' && inputs.build-cli
    runs-on: ubuntu-latest
    needs:
      - prepare
    env:
      ARTIFACTS_KEY: cli-${{ inputs.ref }}
      ARTIFACTS_PATH: ${{ github.workspace }}/bin/grants-ingest
    outputs:
      artifacts-key: ${{ env.ARTIFACTS_KEY }}
      artifacts-path: ${{ env.ARTIFACTS_PATH }}
      checksums-sha256: ${{ steps.final-checksums.outputs.sha256 }}
    steps:
      - uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            actions-results-receiver-production.githubapp.com:443
            api.github.com:443
            github.com:443
            objects.githubusercontent.com:443
            proxy.golang.org:443
            sum.golang.org:443
            raw.githubusercontent.com:443
            storage.googleapis.com:443
      - name: Restore Go build sources
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: ${{ needs.prepare.outputs.sources-key }}
          path: .
      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          go-version-file: go.mod
      - uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: 3.x
      - name: Prepare artifacts output directory
        run: |
          mkdir -p $(dirname $ARTIFACTS_PATH)
          rm -f "$ARTIFACTS_PATH"
      - name: Build CLI
        id: build
        run: task build-cli
      - name: Get compiled checksums
        id: compiled-checksums
        run: |
          COMPILED_CHECKSUMS=$(sha256sum -b "$ARTIFACTS_PATH")
          echo "sha256<<EOF" >> $GITHUB_OUTPUT
          echo "$COMPILED_CHECKSUMS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Install UPX
        uses: crazy-max/ghaction-upx@0fc45e912669ba9e8fa2b430e97c8da2a632e29b # v3.0.0
        with:
          version: v4.1.0
          install-only: true
      - name: Run UPX
        id: pack
        run: |
          UPX_RESULT=$(upx -5 -q "$ARTIFACTS_PATH")
          echo "result<<EOF" >> $GITHUB_OUTPUT
          echo "$UPX_RESULT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Get final checksums
        id: final-checksums
        run: |
          FINAL_CHECKSUMS=$(sha256sum -b "$ARTIFACTS_PATH")
          echo "sha256<<EOF" >> $GITHUB_OUTPUT
          echo "$FINAL_CHECKSUMS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Publish build results
        run: |
          REPORT_FILE=$(mktemp -t summary.md.XXXXX)
          cat >> $REPORT_FILE << 'ENDOFREPORT'
          ## Build CLI Summary

          <details>
          <summary>Compiled Checksums (before packing)</summary>

          ```
          ${{ env.COMPILED_CHECKSUMS }}
          ```

          </details>
          <details>
          <summary>Final Checksums</summary>

          ```
          ${{ env.FINAL_CHECKSUMS }}
          ```

          </details>
          <details>
          <summary>UPX Packing Results</summary>

          ```
          ${{ env.UPX_RESULT }}
          ```

          </details>
          ENDOFREPORT
          cat "$REPORT_FILE" >> $GITHUB_STEP_SUMMARY
        env:
          COMPILED_CHECKSUMS: ${{ steps.compiled-checksums.outputs.sha256 }}
          FINAL_CHECKSUMS: ${{ steps.final-checksums.outputs.sha256 }}
          UPX_RESULT: ${{ steps.pack.outputs.result }}
      - name: Store build artifacts
        id: store
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: ${{ env.ARTIFACTS_KEY }}
          path: ${{ env.ARTIFACTS_PATH }}
          if-no-files-found: error
          include-hidden-files: true
          retention-days: ${{ inputs.artifacts-retention-days }}
