name: Continuous Integration

on:
  # pull_request_target: {}
  pull_request: {}

jobs:
  qa:
    permissions:
      contents: read
    uses: ./.github/workflows/qa.yml
    with:
      ref: ${{ github.event.pull_request.head.sha }}

  build-lambdas:
    permissions:
      contents: read
    name: Build Lambda handlers
    uses: ./.github/workflows/build.yml
    with:
      ref: ${{ github.event.pull_request.head.sha }}
      build-cli: false
      build-lambdas: true

  aws-auth:
    name: Configure AWS Credentials
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    outputs:
      aws-access-key-id: ${{ steps.encrypt-aws-access-key-id.outputs.out }}
      aws-secret-access-key: ${{ steps.encrypt-aws-secret-access-key.outputs.out }}
      aws-session-token: ${{ steps.encrypt-aws-session-token.outputs.out }}
    steps:
      - uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09 # v2.5.1
        with:
          disable-sudo: true
          egress-policy: audit
      - id: auth
        uses: aws-actions/configure-aws-credentials@04b98b3f9e85f563fb061be8751a0352327246b0 # v3.0.1
        with:
          aws-region: us-west-2
          role-to-assume: "${{ secrets.CI_ROLE_ARN }}"
      - id: encrypt-aws-access-key-id
        uses: cloudposse/github-action-secret-outputs@60479d3a8f6726504d00a65d3cf4226c1ae8c661 # v0.1.1
        with:
          in: ${{ steps.auth.outputs.aws-access-key-id }}
          op: encode
          secret: ${{ secrets.TFPLAN_SECRET }}
      - id: encrypt-aws-secret-access-key
        uses: cloudposse/github-action-secret-outputs@60479d3a8f6726504d00a65d3cf4226c1ae8c661 # v0.1.1
        with:
          in: ${{ steps.auth.outputs.aws-secret-access-key }}
          op: encode
          secret: ${{ secrets.TFPLAN_SECRET }}
      - id: encrypt-aws-session-token
        uses: cloudposse/github-action-secret-outputs@60479d3a8f6726504d00a65d3cf4226c1ae8c661 # v0.1.1
        with:
          in: ${{ steps.auth.outputs.aws-session-token }}
          op: encode
          secret: ${{ secrets.TFPLAN_SECRET }}

  tf-plan:
    name: Plan Terraform
    permissions:
      contents: read
    needs:
      - aws-auth
      - build-lambdas
    uses: ./.github/workflows/terraform-plan.yml
    if: always() && needs.build-lambdas.outputs.build-lambdas-result == 'success' && needs.aws-auth.result == 'success'
    with:
      ref: ${{ github.event.pull_request.head.sha }}
      bin-artifacts-key: ${{ needs.build-lambdas.outputs.lambda-artifacts-key }}
      bin-artifacts-path: ${{ needs.build-lambdas.outputs.lambda-artifacts-path }}
      aws-region: us-west-2
      tf-backend-config-file: staging.s3.tfbackend
      tf-var-file: staging.tfvars
      upload-artifacts: false
    secrets:
      aws-access-key-id: ${{ needs.aws-auth.outputs.aws-access-key-id }}
      aws-secret-access-key: ${{ needs.aws-auth.outputs.aws-secret-access-key }}
      aws-session-token: ${{ needs.aws-auth.outputs.aws-session-token }}
      datadog-api-key: ${{ secrets.DATADOG_API_KEY }}
      datadog-app-key: ${{ secrets.DATADOG_APP_KEY }}
      gpg-passphrase: ${{ secrets.TFPLAN_SECRET }}
