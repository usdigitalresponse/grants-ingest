name: Continuous Integration

on:
  pull_request_target: {}

permissions:
  contents: read

jobs:
  qa:
    permissions:
      contents: read
    uses: ./.github/workflows/qa.yml
    with:
      ref: ${{ github.event.pull_request.head.sha }}

  build-lambdas:
    permissions:
      contents: read
    name: Build Lambda handlers
    uses: ./.github/workflows/build.yml
    with:
      ref: ${{ github.event.pull_request.head.sha }}
      build-cli: false
      build-lambdas: true
      artifacts-retention-days: 14

  aws-auth:
    name: Configure AWS Credentials
    permissions:
      contents: read
      id-token: write
    uses: ./.github/workflows/aws-auth.yml
    with:
      aws-region: us-west-2
    secrets:
      role-to-assume: ${{ secrets.CI_ROLE_ARN }}
      gpg-passphrase: ${{ secrets.TFPLAN_SECRET }}

  tf-plan:
    name: Plan Terraform
    permissions:
      contents: read
    needs:
      - aws-auth
      - build-lambdas
    uses: ./.github/workflows/terraform-plan.yml
    if: always() && needs.build-lambdas.outputs.build-lambdas-result == 'success' && needs.aws-auth.result == 'success'
    with:
      ref: ${{ github.event.pull_request.head.sha }}
      concurrency-group: run_terraform-staging
      bin-artifacts-key: ${{ needs.build-lambdas.outputs.lambda-artifacts-key }}
      bin-artifacts-path: ${{ needs.build-lambdas.outputs.lambda-artifacts-path }}
      aws-region: us-west-2
      environment-key: staging
      tf-backend-config-file: staging.s3.tfbackend
      tf-var-file: staging.tfvars
      upload-artifacts: false
      artifacts-retention-days: 14
    secrets:
      aws-access-key-id: ${{ needs.aws-auth.outputs.aws-access-key-id }}
      aws-secret-access-key: ${{ needs.aws-auth.outputs.aws-secret-access-key }}
      aws-session-token: ${{ needs.aws-auth.outputs.aws-session-token }}
      datadog-api-key: ${{ secrets.DATADOG_API_KEY }}
      datadog-app-key: ${{ secrets.DATADOG_APP_KEY }}
      gpg-passphrase: ${{ secrets.TFPLAN_SECRET }}

  publish-tf-plan:
    name: Publish Terraform Plan
    permissions:
      contents: read
      pull-requests: write
    if: needs.tf-plan.result != 'skipped' || needs.tf-plan.result != 'cancelled'
    needs:
      - tf-plan
    uses: ./.github/workflows/publish-terraform-plan.yml
    with:
      write-summary: true
      write-comment: true
      pr-number: ${{ github.event.pull_request.number }}
      tf-fmt-outcome: ${{ needs.tf-plan.outputs.fmt-outcome }}
      tf-init-outcome: ${{ needs.tf-plan.outputs.init-outcome }}
      tf-plan-outcome: ${{ needs.tf-plan.outputs.plan-outcome }}
      tf-plan-output: ${{ needs.tf-plan.outputs.plan-output }}
      tf-validate-outcome: ${{ needs.tf-plan.outputs.validate-outcome }}
      tf-validate-output: ${{ needs.tf-plan.outputs.validate-output }}
